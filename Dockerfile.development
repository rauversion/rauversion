FROM ruby:3.3.5

ARG APP_ENV=development
ARG PG_MAJOR
ARG NODE_MAJOR=21
ARG BUNDLER_VERSION=2.3.26
ARG YARN_VERSION=1.22.19

# Copy custom installer scripts
RUN mkdir -p /docker-files
COPY .docker-files/ /docker-files
RUN chmod +x /docker-files/*.sh

# Install dependencies
RUN /docker-files/deps.sh
RUN /docker-files/pg.sh
RUN /docker-files/node.sh

# System-level env
ENV LANG=C.UTF-8 \
  BUNDLE_JOBS=4 \
  BUNDLE_RETRY=3 \
  BUNDLE_PATH=/usr/local/bundle

# Add unprivileged user BEFORE chown
RUN adduser --disabled-password --gecos "" docker && adduser docker staff

# Create bundler path and assign to user
RUN mkdir -p /usr/local/bundle && chown -R docker:docker /usr/local/bundle

# Create app directory
RUN mkdir -p /usr/src/app && chown -R docker:docker /usr/src/app

# Switch to unprivileged user
USER docker
WORKDIR /usr/src/app

# Install bundler as docker user
RUN gem update --system && \
  gem install bundler:$BUNDLER_VERSION && \
  bundle config set path '/usr/local/bundle'

# Copy Gemfiles and install gems
COPY --chown=docker:docker Gemfile Gemfile.lock ./
COPY --chown=docker:docker ./backstage ./backstage
RUN bundle install

# JS deps
COPY --chown=docker:docker package.json yarn.lock ./
RUN yarn install

RUN mkdir -p tmp/cache/assets log && \
  chown -R docker:docker tmp log
# Rest of app
COPY --chown=docker:docker . .
RUN chown -R docker:docker tmp log

# Install ffmpeg & waveform as root
USER root
COPY --from=mwader/static-ffmpeg:4.1.4-2 /ffmpeg /ffprobe /usr/local/bin/
RUN apt-get update && \
  wget https://github.com/bbc/audiowaveform/releases/download/1.8.1/audiowaveform_1.8.1-1-12_amd64.deb && \
  dpkg -i audiowaveform_1.8.1-1-12_amd64.deb || true && \
  apt-get -f install -y

RUN apt-get install --no-install-recommends -y libjemalloc2

# ENV LD_PRELOAD="libjemalloc.so.2" \
#   MALLOC_CONF="dirty_decay_ms:1000,narenas:2,background_thread:true,stats_print:true"

ENV LD_PRELOAD="libjemalloc.so.2" \
  MALLOC_CONF="dirty_decay_ms:1000,narenas:2,background_thread:true,stats_print:false"  \
  RUBY_YJIT_ENABLE="1"

# Cleanup
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
  truncate -s 0 /var/log/*log

# Remove suid/sgid for security
RUN find / -perm /6000 -type f -exec chmod a-s {} \; || true

# Back to docker user
USER docker
WORKDIR /usr/src/app
